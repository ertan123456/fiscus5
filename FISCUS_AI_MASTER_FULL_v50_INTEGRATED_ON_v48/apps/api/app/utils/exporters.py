from io import BytesIO
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import A4
from openpyxl import Workbook
from lxml import etree

def invoice_pdf(inv: dict, company_name: str = "FISCUS AI") -> bytes:
    buffer = BytesIO(); c = canvas.Canvas(buffer, pagesize=A4)
    c.setTitle(f"Invoice {inv['number']}")
    c.setFont("Helvetica-Bold", 18); c.drawString(72, 800, company_name)
    c.setFont("Helvetica-Bold", 14); c.drawString(72, 780, f"Invoice #{inv['number']}")
    c.setFont("Helvetica", 11); y = 760
    kv = [("Issue Date", inv["issue_date"]), ("Due Date", inv["due_date"]), ("Customer ID", inv["customer_id"]),
          ("Subtotal", inv["subtotal"]), ("Tax", inv["tax"]), ("Total", inv["total"]), ("Status", inv["status"])]
    for k,v in kv:
        c.drawString(72, y, f"{k}: {v}"); y -= 18
    c.line(72, y-4, 540, y-4)
    c.setFont("Helvetica-Oblique", 9); c.drawString(72, y-18, "Generated by FISCUS AI")
    c.showPage(); c.save(); return buffer.getvalue()

def invoice_xlsx(inv: dict) -> bytes:
    wb = Workbook(); ws = wb.active; ws.title = "Invoice"
    ws.append(["Field","Value"])
    for k in ["number","issue_date","due_date","customer_id","subtotal","tax","total","status"]:
        ws.append([k, inv[k]])
    buf = BytesIO(); wb.save(buf); return buf.getvalue()

def invoice_ubl_xml(inv: dict, company_name: str = "FISCUS AI") -> bytes:
    # **Basitleştirilmiş** UBL benzeri XML; resmi standart yerine demo amaçlı.
    root = etree.Element("Invoice")
    etree.SubElement(root, "CompanyName").text = company_name
    for k in ["number","issue_date","due_date","customer_id","subtotal","tax","total","status"]:
        etree.SubElement(root, k).text = str(inv[k])
    return etree.tostring(root, pretty_print=True, xml_declaration=True, encoding="UTF-8")
